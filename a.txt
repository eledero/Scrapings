"X.Create.New.And.Better.SWC.Definitions...Add.More.Test.Cases." "X.Time.left." "X.Opened." "X.1.day.ago." "X.Experience.Level." "X.Intermediate." "X.Issue.Type." "X.Improvement." "X.Project.Type." "X.Traditional." "X.Time.Commitment." "X.Weeks." "X.Permissions." "X.Approval.Required." "X.SWC.registry.nWe.are.working.on.the.SWC..a.smart.contract.specific.software.weakness.classification.scheme..Help.us.establish.a.common.language.around.security.related.bugs.in.smart.contracts.and.create.useful.test.cases.for.them..nUser.Story.nWe.are.looking.to.add.and.improve.existing.SWC.definitions..Some.of.them.just.have.a.title.and.others.could.use.better.descriptions..There.are.also.many.weakness.types.that.we.have.not.yet.in.the.registry.at.all..If.you.have.a.knack.for.smart.contract.security.and.are.good.at.writing.about.security.issues.then.this.is.for.you..Get.started.by.checking.out.the.SWC.README.and.by.reading.SWC.definitions.and.test.cases.that.are.already.finished..nYou.complete.the.challenge.if.you..nadd.3.more.SWC.definitions.and.at.least.a.test.case.each.nfinish.3.SWC.definitions.that.are.are.currently.incomplete.nCommunication.nFind.us.on.Discord.and.in.any.case.just.drop.your.questions.here.." "X.OceanDB.Elastic.Search.Bounty." "X.Time.left..1" "X.Opened..1" "X.1.day.ago..1" "X.Experience.Level..1" "X.Intermediate..1" "X.Issue.Type..1" "X.Feature." "X.Project.Type..1" "X.Contest." "X.Time.Commitment..1" "X.Days." "X.Permissions..1" "X.Approval.Required..1" "X.OceanDB.Elastic.Search.Bounty.nHow.can.you.help..nWe.are.looking.for.some.help.to.create.an.Elastic.Search.driver.for.Ocean.Protocol..We.have.a.Database.Plugins.system.allowing.us.to.interact.with.different.Metadata.databases..We.call.to.this.component.OceanDB..This.project.defines.the.interface.that.needs.to.be.implemented.by.different.driver.implementations..You.can.find.more.information.about.this.OceanDB.plugins.system.in.the.following.repository..nhttps...github.com.oceanprotocol.oceandb.driver.interface.nWhat.needs.to.be.done..nCreate.a.new.OceanDB.driver.interacting.with.Elastic.Search..The.requirements.for.the.project.are..nImplement.the.complete.OceanDB.Driver.Interface.nHave.a.unit.test.code.coverage...80..nUse.Elastic.Search.6.x.as.backend.nSupport.Elastic.Search.security.on.transport.SSL.nSupport.Python.versions.3.6..3.7..add.tox.validation..nIt.is.possible.to.use.the.existing.MongoDB.and.BigChainDB.drivers.as.reference..nhttps...github.com.oceanprotocol.oceandb.mongodb.driver.nhttps...github.com.oceanprotocol.oceandb.bigchaindb.driver.nIt.s.recommended.to.use.the.project.structure.created.in.one.of.the.existing.drivers..nThe.Pull.Requests.must.be.sent.to.this.repository..nhttps...github.com.oceanprotocol.oceandb.elasticsearch.driver.nWe.are.very.happy.when.nWhen.all.below.changes.are.merged.with.master.branch.n....OceanDB.Elastic.Search.driver.is.implemented.and.can.be.plugged.as.an.OceanDB.driver.n....The.Python.code.support.the....3.6.versions.n....Unit.test.code.coverage.is...80..n....The.driver.implementing.the.complete.interface.is.able.to.use.Elastic.Search.6.x.as.backend.nSeen.this.problem.before..nAny.help.solving.this.is.welcome..Feel.free.to.leave.any.comments.and.help.someone.else.to.solve.it..We.might.airdrop.tokens.to.someone.even.if.not.directly.completing.bounty..nQuestions...Reviews.nPull.requests.will.be.reviewed.by.one.of.the.maintainers.or.long.term.contributors..In.case.of.any.additional.questions.feel.free.to.ask.in.this.thread.and.we.will.do.our.best.to.add.the.missing.info....nReward.nThis.bounty.is.valued.at.10000.PROCN.tokens..Once.the.project.was.reviewed.and.merged.in.the.master.branch..you.will.receive.the.reward..PROCN.is.a.proto.Ocean.token..Bounty.hunters.that.earn.PROCN.will.be.able.to.convert.them.1.1.to.Ocean.tokens.on.network.launch..currently.Ocean.Token.is.valued.at.0.20.EUR...Network.launch.is.expected.to.happen.by.Mar.31..2019..Until.then.PROCN.will.be.locked.and.non.transferrable.in.the.ETH.wallet.to.which.it.is.delivered.to.." "X.Document.JSON.RPC.Interface.In.An.EIP." "X.Time.left..2" "X.Opened..2" "X.2.days.ago." "X.." "X...1" "X...2" "X...3" "X.Project.Type..2" "X.Traditional..1" "X.Time.Commitment..2" "X.Unknown." "X.Permissions..2" "X.Approval.Required..2" "X.At.present..the.JSON.RPC.interface.all.clients.expose.is.loosely.documented.at.https...github.com.ethereum.wiki.wiki.JSON.RPC..but.this.doesn.t.truly.represent.the.current.state.of.all.clients..It.s.also.incomplete..leaving.out.crucial.details.such.as.the.format.for.hex.encoded.numbers.and.strings..and.doesn.t.provide.an.obvious.mechanism.for.proposing.and.implementing.new.RPCs.in.a.cross.client.manner..nWe.should.fix.this.by.writing.an.EIP.that.serves.as.a.complete.reference.for.client.maintainers.and.users.of.the.standard.RPCs.." "X.Add.Documentation.To.README.About.The.New..ipfsignore.File." "X.Time.left..3" "X.Opened..3" "X.2.days.ago..1" "X.Experience.Level..2" "X.Beginner." "X.Issue.Type..2" "X.Documentation." "X.Project.Type..3" "X.Traditional..2" "X.Time.Commitment..3" "X.Hours." "X.Permissions..3" "X.Approval.Required..3" "X...4" "X.Implement.Discovery.V5." "X.Time.left..4" "X.Opened..4" "X.5.days.ago." "X.Experience.Level..3" "X.Intermediate..2" "X.Issue.Type..3" "X.Improvement..1" "X.Project.Type..4" "X.Traditional..3" "X.Time.Commitment..4" "X.Weeks..1" "X.Permissions..4" "X.Approval.Required..4" "X.As.you.can.see.below..Gitcoin.bounty.has.been.funded.for.this.issue..kudos.to.Gitcoin.team...Below.you.will.find.more.information.on.what.is.expected..nNote.that.the.discovery.v5.protocol.is.still.in.experimental...test.stage..The.protocol.may.change..the.exact.spec.may.be.difficult.to.obtain.and.testing.may.be.difficult..We.will.be.ready.to.accept.the.bounty.payment.if.sufficient.research.and.coding.is.provided.even.if.there.are.outstanding.issues.in.the.code..nMore.information.on.discovery.v5.is.available.here..https...ideas.status.im.ideas.092.disc.v5.research.nThe.actual.protocol.spec.need.to.be.collected.from.various.web.source...reverse.engineered..The.best.way.would.be.to.contact.core.devs.who.implemented.discv5.for.Geth.or.analyze.Geth.source.code..nBest.place.to.seek.help.from.the.team.is.Gitter..https...gitter.im.nethermindeth.nethermind.nRequirements.for.code..nWork.with..glesniakiewicz.and..tkstanczak.to.define.changes.for.IDiscoveryManager.interface.to.neatly.abstract.different.discovery.implementations..This.should.be.done.after.initial.research.is.done..Potential.solutions.will.be.discussed.on.gitter.and.as.a.result.we.will.define.a.new.IDiscoveryManager.interface.definition.if.required..nImplement.disc.v5.messages.and.their.respective.serializers.nAdd...modify.discovered.nodes.store.to.keep.information.about.the.supported.protocols.nAdd.unit.tests.for.added.classes.nAdd.necessary.entries.to.configuration.modules.and.config.files.to.switch.discovery.between.existing.and.v5.nRun.the.node.in.discovery.v5.and.prove.that.other.ndoes.can.be.discovered.."
"1" "Create New And Better SWC Definitions / Add More Test Cases" "Time left" "Opened" "1 day ago" "Experience Level" "Intermediate" "Issue Type" "Improvement" "Project Type" "Traditional" "Time Commitment" "Weeks" "Permissions" "Approval Required" "SWC-registry
We are working on the SWC; a smart contract specific software weakness classification scheme. Help us establish a common language around security related bugs in smart contracts and create useful test cases for them.
User Story
We are looking to add and improve existing SWC definitions. Some of them just have a title and others could use better descriptions. There are also many weakness types that we have not yet in the registry at all. If you have a knack for smart contract security and are good at writing about security issues then this is for you! Get started by checking out the SWC README and by reading SWC definitions and test cases that are already finished.
You complete the challenge if you:
add 3 more SWC definitions and at least a test case each
finish 3 SWC definitions that are are currently incomplete
Communication
Find us on Discord and in any case just drop your questions here." "OceanDB Elastic Search Bounty" "Time left" "Opened" "1 day ago" "Experience Level" "Intermediate" "Issue Type" "Feature" "Project Type" "Contest" "Time Commitment" "Days" "Permissions" "Approval Required" "OceanDB Elastic Search Bounty
How can you help?
We are looking for some help to create an Elastic Search driver for Ocean Protocol. We have a Database Plugins system allowing us to interact with different Metadata databases. We call to this component OceanDB. This project defines the interface that needs to be implemented by different driver implementations. You can find more information about this OceanDB plugins system in the following repository:
https://github.com/oceanprotocol/oceandb-driver-interface
What needs to be done?
Create a new OceanDB driver interacting with Elastic Search. The requirements for the project are:
Implement the complete OceanDB Driver Interface
Have a unit test code coverage > 80%
Use Elastic Search 6.x as backend
Support Elastic Search security on transport SSL
Support Python versions 3.6, 3.7 (add tox validation)
It is possible to use the existing MongoDB and BigChainDB drivers as reference:
https://github.com/oceanprotocol/oceandb-mongodb-driver
https://github.com/oceanprotocol/oceandb-bigchaindb-driver
It's recommended to use the project structure created in one of the existing drivers.
The Pull Requests must be sent to this repository:
https://github.com/oceanprotocol/oceandb-elasticsearch-driver
We are very happy when
When all below changes are merged with master branch
[ ] OceanDB Elastic Search driver is implemented and can be plugged as an OceanDB driver
[ ] The Python code support the >= 3.6 versions
[ ] Unit test code coverage is > 80%
[ ] The driver implementing the complete interface is able to use Elastic Search 6.x as backend
Seen this problem before?
Any help solving this is welcome. Feel free to leave any comments and help someone else to solve it. We might airdrop tokens to someone even if not directly completing bounty.
Questions & Reviews
Pull requests will be reviewed by one of the maintainers or long-term contributors. In case of any additional questions feel free to ask in this thread and we will do our best to add the missing info :)
Reward
This bounty is valued at 10000 PROCN tokens. Once the project was reviewed and merged in the master branch, you will receive the reward. PROCN is a proto-Ocean token. Bounty hunters that earn PROCN will be able to convert them 1:1 to Ocean tokens on network launch (currently Ocean Token is valued at 0.20 EUR). Network launch is expected to happen by Mar 31, 2019. Until then PROCN will be locked and non-transferrable in the ETH wallet to which it is delivered to." "Document JSON-RPC Interface In An EIP" "Time left" "Opened" "2 days ago" "" "" "" "" "Project Type" "Traditional" "Time Commitment" "Unknown" "Permissions" "Approval Required" "At present, the JSON-RPC interface all clients expose is loosely documented at https://github.com/ethereum/wiki/wiki/JSON-RPC, but this doesn't truly represent the current state of all clients. It's also incomplete, leaving out crucial details such as the format for hex-encoded numbers and strings, and doesn't provide an obvious mechanism for proposing and implementing new RPCs in a cross-client manner.
We should fix this by writing an EIP that serves as a complete reference for client maintainers and users of the standard RPCs." "Add Documentation To README About The New .ipfsignore File" "Time left" "Opened" "2 days ago" "Experience Level" "Beginner" "Issue Type" "Documentation" "Project Type" "Traditional" "Time Commitment" "Hours" "Permissions" "Approval Required" "" "Implement Discovery V5" "Time left" "Opened" "5 days ago" "Experience Level" "Intermediate" "Issue Type" "Improvement" "Project Type" "Traditional" "Time Commitment" "Weeks" "Permissions" "Approval Required" "As you can see below- Gitcoin bounty has been funded for this issue (kudos to Gitcoin team). Below you will find more information on what is expected:
Note that the discovery v5 protocol is still in experimental / test stage. The protocol may change, the exact spec may be difficult to obtain and testing may be difficult. We will be ready to accept the bounty payment if sufficient research and coding is provided even if there are outstanding issues in the code.
More information on discovery v5 is available here: https://ideas.status.im/ideas/092-disc-v5-research
The actual protocol spec need to be collected from various web source / reverse engineered. The best way would be to contact core devs who implemented discv5 for Geth or analyze Geth source code.
Best place to seek help from the team is Gitter: https://gitter.im/nethermindeth/nethermind
Requirements for code:
Work with @glesniakiewicz and @tkstanczak to define changes for IDiscoveryManager interface to neatly abstract different discovery implementations. This should be done after initial research is done. Potential solutions will be discussed on gitter and as a result we will define a new IDiscoveryManager interface definition if required.
Implement disc v5 messages and their respective serializers
Add / modify discovered nodes store to keep information about the supported protocols
Add unit tests for added classes
Add necessary entries to configuration modules and config files to switch discovery between existing and v5
Run the node in discovery v5 and prove that other ndoes can be discovered."
